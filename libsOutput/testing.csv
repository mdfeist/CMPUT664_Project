Project, Author, $mock.incomingQuery.InvoiceData, outgoing_command.SpaceShip, data_setup.HeroRowMapper, too_simple_for_testing.DelegationTest$Reformater, java.lang.Integer, int, ActiveUsersService, hero.HeroService, org.assertj.examples.data.TolkienCharacter, java.util.Map, char, java.util.Date, boolean, FeePolicy, $2_tools.examples.Ring, java.lang.String, InvoiceRepository, domain.Bar, FlyingSaucer, InvoiceData, Hero, org.assertj.examples.data.Race, hero.HeroContext, fail_readability_13.Organization, hero.HeroOrigin, java.nio.file.Path, long, spaceship.Gun, production_logic_in_test.PersonTest$Person, TolkienCharacter, $11_mocks.annotations.ArgumentCaptor, fail_readability_13.Person, java.util.Comparator, java.util.ArrayList, java.lang.Object, java.sql.ResultSet, fail_readability_13.HeroesRepository, PrepaidTopup, sql.HeroQueryBuilder, Bar, java.lang.StringBuilder, fail_readability_13.Hero, org.mockito.InOrder, $2_tools.examples.TolkienCharacter, org.joda.time.LocalDate, org.assertj.examples.data.Person, Person, data_setup.HeroOriginService, org.assertj.examples.data.Ring, org.joda.time.DateTime, hero.HeroRepository, InvoiceDataFactory, java.lang.Boolean, incoming_query.Machinery, OrderHandler, tddmocks_7.OrderProcessor_7$Order, InvoiceService, org.slf4j.Logger, $mock.incomingQuery.Invoice, java.util.List, org.assertj.examples.data.movie.Movie, java.lang.Double, Invoices, outgoing_query.Scanner, $2_tools.examples.Person, java.lang.AssertionError, SpaceShip, $2_tools.examples.movie.Movie, java.lang.reflect.Array, domain.Foo, DataAwareFlyingSaucer, User, hero.Hero, double, VendorMachine, Scanner, org.mockito.ArgumentCaptor, command_query.Walec, data_setup.EpitaphWriter, exception.DepositService, org.hamcrest.Description, 
testing/, Michal, 2, 2, 2, 1, 11, 92, 3, 10, 24, 16, 5, 4, 18, 2, 2, 135, 2, 44, 21, 2, 13, 2, 4, 1, 9, 1, 1, 1, 1, 6, 2, 1, 3, 4, 22, 3, 2, 6, 3, 2, 1, 2, 2, 42, 2, 4, 4, 4, 1, 1, 10, 2, 1, 2, 6, 1, 4, 3, 2, 33, 4, 1, 2, 4, 2, 3, 6, 12, 41, 42, 3, 6, 99, 14, 3, 3, 2, 4, 2, 1, 2, 
testing/, Adam, 0, 0, 1, 0, 0, 8, 0, 1, 0, 0, 5, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 1, 0, 0, 
